#!/bin/bash

function worked {
	if (( $1 == 0 ))
	then
		echo -n "[ OK  ]	"
	else
		echo -n "[ NOK ]	"
	fi
}

function ncCheck {
	ip="$1"
	port="$2"
	proto="$3"
	if [[ $proto == 'u' ]]
	then
		options="-zu -w 3"
	else
		options="-w 3"
	fi
	nc $options $ip $port >/dev/null 2>&1
	worked $?
	echo -n "$ip on port $port"
	if [[ $proto == "u" ]]
	then
		echo " UDP"
	else
		echo ""
	fi
}

function webCheck {
	site=$1
	curl --connect-timeout 3 -I "$site" 2>&1 | grep "HTTP/1.1 200 OK" >/dev/null 2>&1
	worked $?
	echo "$site"
}

function outBound {
	remoteHost=""
	# Get system information
	# Get hosts IP
	hostIP=$(ifconfig | sed -n '/eth/,/addr/p' | awk '{print $2}' | cut -d: -f2 | tail -1)
	# Get hosts Subnet
	hostSubnet=$(echo "$hostIP" | sed 's/\.[0-9][0-9]*$//')
	# Get host subnet name and ports to open
	if echo $hostSubnet | grep -v '^[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}' >/dev/null 2>&1
	then
		echo "Not a subnet $hostSubnet"
		exit 1
	fi
	subnetName=$(grep "$hostSubnet" stg-vlans | cut -f1)
	if echo "$subnetName" | grep '^[ 	]*$' >/dev/null 2>&1
	then
		echo "No subnets to test"
		exit 1
	fi
	portList=$(sed -n "/^$subnetName/,/^$/p" stg-rules | sed '/^$/d')
	# Subnets is used to determine from where my host lives to the remote networks

	# Use the portList to iterate through checks and obtain remote host IP
	# We will use .39 as the host in each subnet
	echo "$portList"
	echo "$portList" | while read line
	do
		# First line in should be the to/from definition, ends with =
		if echo "$line" | grep '=$' >/dev/null 2>&1
		then
			destination=$(echo $line | sed -e 's/^.*2//' -e 's/=$//')
			remoteHost=$(grep "$destination" stg-vlans | awk '{print $2}')
			remoteHost="${remoteHost}39"

		# Need to determine if the check is a IP/port or if it is a hostname for Email
		elif echo "$line" | grep 'http://' >/dev/null 2>&1
		then
			echo "Performing HTTP check"
			for line in $urls
			do
				webCheck $line
			done
		elif echo "$line" | egrep '(CORE2DNS|CORE2EMAIL)' >/dev/null 2>&1
		then
			echo "Performing $& check"
			if echo "$line" | grep CORE2DNS >/dev/null
			then
				OIFS="$IFS"
				IFS=":/"
				echo "$line" | while read IP port proto
				do
					if [[ $proto == udp ]]
					then
						proto='u'
					else
						proto=''
					fi
	
					ncCheck $IP $prot $proto
				done
				IFS="$OIFS"
			fi
	
			if echo "$line" | grep CORE2EMAIL >/dev/null
			then
				ncCheck $line 25
			fi
	
		else
			echo "Performing port check"
			OIFS="$IFS"
			IFS="/"
			echo "$line" | while read port proto
			do
				if [[ $proto == udp ]]
				then
					proto='u'
				else
					proto=''
				fi

				ncCheck $remoteHost $port $proto
			done
			IFS="$OIFS"
		fi
	done
}

outBound
